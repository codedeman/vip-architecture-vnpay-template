//
//  UserInteractor.swift
//  UserList
//
//  Created Apple on 4/7/20.
//  Copyright Â© 2020 VNPay. All rights reserved.
//
//  Template generated by Vnpay
//

protocol UserPresentable: Presentable {
  
  func set(viewModel:[UserEntity])
    // Declare methods the interactor can invoke the presenter to present data.
}

protocol UserInteractable: Interactable {
    var router: UserRouting? { get set }
  func setContext(to context: RouteContext?)

  func fetchUser(username:String)
  
    
}

final class UserInteractor: PresentableInteractor<UserPresentable> {
    lazy var worker: UserWorker = UserWorker()
    var router: UserRouting?
    var context: RouteContext?

    // Add additional dependencies to constructor. Do not perform any logic
    // in constructor.
    override init(presenter: UserPresentable) {
        super.init(presenter: presenter)
    }
}

// MARK: UserInteractable
extension UserInteractor: UserInteractable {
  

 
  func fetchUser(username: String) {
    
    worker.fetchUser(username: username) { (userEntity) in
      self.presenter.set(viewModel: userEntity!.items)
    }
  }
  
    func setContext(to context: RouteContext?) {
        self.context = context
    }
  
  
}
